{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b03e2dae.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './MatchDetailCard.scss'\nexport const  MatchDetailCard=({teamName,match}) => {\n  if(!match) return null;\n  const otherTeam=match.team1===teamName ?match.team2:match.team1;\n  const otherTeamRoute =`/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner; \n  return (\n    <div className={isMatchWon ? 'MatchDetailCard won-card':'MatchDetailCard lost-card'}>\n      <div>\n     <span className=\"vs\">vs </span>\n      <h1><Link to ={otherTeamRoute}> {otherTeam}</Link></h1>\n      <h2 className=\"match-date\">{match.date}</h2>\n      <h3 className=\"match-venue\">at {match.venue}</h3>\n      <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n      </div>\n      <div className=\"additional-detail\">\n      <h3>First Innings</h3>\n      <p>{match.team1}</p>\n      <h3>Second Innings</h3>\n      <p>{match.team2}</p>\n      <h3>Man of the match</h3>\n      <p>{match.playerOfMatch}</p>\n      <h3>Umpires</h3>\n      <p>{match.umpire1},{match.umpire2}</p>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './MatchSmallCard.scss'\nexport const MatchSmallCard=({teamName,match}) => {\n  const otherTeam=match.team1===teamName?match.team2:match.team1;\n  const otherTeamRoute =`/teams/${otherTeam}`;\n  const isMatchWon=teamName===match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard won-card':'MatchSmallCard lost-card'}>\n       <span className=\"vs\">vs</span>\n       <h1>  \n          <Link to={otherTeamRoute}> {otherTeam}</Link></h1>\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n\n    </div>\n  );\n}\n\n","import { React, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nimport './TeamPage.scss';\n\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({matches: []});\n    const { teamName } = useParams();\n    useEffect(\n        () => {\n         const fetchTeam = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n            const data = await response.json();\n            setTeam(data);\n\n         };\n         fetchTeam();\n            \n\n\n        }, [teamName]\n    );\n\n    if (!team || !team.teamName) {\n        return <h1>Team not found</h1>\n    }\n    return (\n        <div className=\"TeamPage\">\n        <div className=\"team-name-section\">\n            <h1 className=\"team-name\">{team.teamName}</h1>\n        </div>\n        <div className=\"win-loss-section\">\n            Wins / Losses\n            <PieChart\n                data={[\n                    { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                    { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                ]}\n                />\n        </div>\n        <div className=\"match-detail-section\">\n            <h3>Latest Matches</h3>\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\n        </div>\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n        <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\n        </div>\n        </div>\n    );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './YearSelector.scss'\nexport const YearSelector=({teamName})=>{\n    let years=[];\n    const startYear=process.env.REACT_APP_DATA_START_YEAR;\n    const endYear  =process.env.REACT_APP_DATA_END_YEAR;\n    for(let i=startYear;i<=endYear;i++){\n        years.push(i);\n    }\n    return(\n        <ol className=\"YearSelector\">\n        { years.map(year => (\n        <li key ={year} >\n            \n           <Link to = {`/teams/${teamName}/matches/${year}`}> {year}</Link>\n            \n        </li>\n        \n        ))}\n        </ol>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\n\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n\n    const [matches, setMatches] = useState([]);\n    const { teamName, year } = useParams();\n    useEffect(\n        () => {\n         const fetchMatches = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n            const data = await response.json();\n            setMatches(data);\n\n         };\n         fetchMatches();\n            \n\n\n        }, [teamName, year]\n    );\n\n   \n    return (\n        <div className=\"MatchPage\">\n            <div className=\"year-selector\">\n                <h3> Select Year </h3>\n                <YearSelector teamName={teamName} />\n            </div>\n            <div>\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                {\n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n                }\n            </div>\n\n        </div>\n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                    <Link to={`/teams/${teamName}`}>\n                        {teamName}\n                    </Link>\n                </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport { TeamTile } from '../components/TeamTile';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n    useEffect(\n        () => {\n         const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n\n         };\n         fetchAllTeams();\n            \n\n\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n        \n    );\n}","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomePage} from './pages/HomePage'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n              <Route path=\"/teams/:teamName/matches/:year\">\n                <MatchPage/>\n                </Route>\n                <Route path=\"/teams/:teamName\">\n                  <TeamPage/>\n                  </Route>\n                  <Route path=\"/\">\n                    <HomePage/>\n                  </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}