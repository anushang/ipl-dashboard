{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","respone","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.015d2f83.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './MatchDetailCard.scss'\nexport const  MatchDetailCard=({teamName,match}) => {\n  if(!match) return null;\n  const otherTeam=match.team1===teamName ?match.team2:match.team1;\n  const otherTeamRoute =`/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner; \n  return (\n    <div className={isMatchWon ? 'MatchDetailCard won-card':'MatchDetailCard lost-card'}>\n      <div>\n     <span className=\"vs\">vs </span>\n      <h1><Link to ={otherTeamRoute}> {otherTeam}</Link></h1>\n      <h2 className=\"match-date\">{match.date}</h2>\n      <h3 className=\"match-venue\">at {match.venue}</h3>\n      <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n      </div>\n      <div className=\"additional-detail\">\n      <h3>First Innings</h3>\n      <p>{match.team1}</p>\n      <h3>Second Innings</h3>\n      <p>{match.team2}</p>\n      <h3>Man of the match</h3>\n      <p>{match.playerOfMatch}</p>\n      <h3>Umpires</h3>\n      <p>{match.umpire1},{match.umpire2}</p>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './MatchSmallCard.scss'\nexport const MatchSmallCard=({teamName,match}) => {\n  const otherTeam=match.team1===teamName?match.team2:match.team1;\n  const otherTeamRoute =`/teams/${otherTeam}`;\n  const isMatchWon=teamName===match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard won-card':'MatchSmallCard lost-card'}>\n       <span className=\"vs\">vs</span>\n       <h1>  \n          <Link to={otherTeamRoute}> {otherTeam}</Link></h1>\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n\n    </div>\n  );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { MatchDetailCard } from '../components/MatchDetailCard'\nimport { MatchSmallCard } from '../components/MatchSmallCard'\nimport { useParams ,Link} from 'react-router-dom'\nimport { PieChart } from 'react-minimal-pie-chart';\n\nimport './TeamPage.scss'\nexport const TeamPage = () => {\n\n  const [team, setTeam] = useState({ matches: [] });\n  const { teamName } = useParams();\n  useEffect(\n    () => {\n      const fetchMatches = async () => {\n        const respone = await fetch(`http://0.0.0.0:8080/team/${teamName}`);\n        const data = await respone.json();\n        setTeam(data);\n\n      };\n      fetchMatches();\n    }, [teamName] // brackets define when useEffect changes useeffect\n  )\n  if (!team || !team.teamName) {\n    return <h1>Team Not Found!</h1>\n  }\n\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\n      <div className=\"win-loss-section\">Wins / Losses\n      <PieChart\n  data={[\n    { title: 'Losses', value: team.totalMatches-team.totalWins, color: '#a34d5d' },\n    { title: 'Wins', value: team.totalWins, color: '#4da375' },\n    \n  ]}\n/>\n      </div>\n      <div className=\"match-detail-section\">\n      <h3>Latest Matches</h3>\n      <MatchDetailCard  teamName={team.teamName}  match={team.matches[0]} />\n      \n      </div>\n      {team.matches.slice(1).map(match => <MatchSmallCard key = {match.id}teamName={team.teamName}   match={match}  />)}\n      <div className=\"more-link\">\n      <Link to = {`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}> More ></Link>\n        </div>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './YearSelector.scss'\nexport const YearSelector=({teamName})=>{\n    let years=[];\n    const startYear=process.env.REACT_APP_DATA_START_YEAR;\n    const endYear  =process.env.REACT_APP_DATA_END_YEAR;\n    for(let i=startYear;i<=endYear;i++){\n        years.push(i);\n    }\n    return(\n        <ol className=\"YearSelector\">\n        { years.map(year => (\n        <li key ={year} >\n            \n           <Link to = {`/teams/${teamName}/matches/${year}`}> {year}</Link>\n            \n        </li>\n        \n        ))}\n        </ol>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { MatchDetailCard } from '../components/MatchDetailCard'\nimport { useParams } from 'react-router-dom'\nimport { YearSelector } from '../components/YearSelector'\nimport './MatchPage.scss'\n\nexport const MatchPage = () => {\n\n  const [matches, setMatches] = useState([]);\n  const { teamName, year } = useParams();\n  useEffect(  \n    () => {\n      const fetchMatches = async () => {\n        const respone = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\n        const data = await respone.json();\n        setMatches(data);\n      };\n      fetchMatches();\n    }, [teamName,year]\n  )\n\n  return (\n    <div className=\"MatchPage\">\n        <div className=\"year-selector\">\n            <h3> Select Year </h3>\n            <YearSelector teamName={teamName} />\n        </div>\n        <div>\n            <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n            {\n                matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n            }\n        </div>\n\n    </div>\n);\n}\n\nexport default MatchPage;","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                    <Link to={`/teams/${teamName}`}>\n                        {teamName}\n                    </Link>\n                </h1>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { TeamTile } from '../components/TeamTile';\n\nimport './HomePage.scss'\nexport const HomePage = () => {\n\n  const [teams, setTeams] = useState([]);\n  useEffect(\n    () => {\n      const fetchAllTeams = async () => {\n        const respone = await fetch(`http://0.0.0.0:8080/team/`);\n        const data = await respone.json();\n        setTeams(data);\n\n      };\n      fetchAllTeams();\n    }, [] // brackets define when useEffect changes useeffect\n  )\n  \n\n  return (\n    <div className=\"HomePage\">\n      <div className=\"header-section\">\n          <h1 className=\"app-name\">IPL Dashboard</h1>\n      </div>\n    <div className=\"team-grid\">\n        {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\n    </div>\n    </div>\n  );\n}\n\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomePage} from './pages/HomePage'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n              <Route path=\"/teams/:teamName/matches/:year\">\n                <MatchPage/>\n                </Route>\n                <Route path=\"/teams/:teamName\">\n                  <TeamPage/>\n                  </Route>\n                  <Route path=\"/\">\n                    <HomePage/>\n                  </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}